apply plugin: "com.android.application"
apply plugin: "com.google.gms.google-services"
apply plugin: "realm-android"

import com.android.build.OutputFile

 
project.ext.react = [
    // the name of the generated asset file containing your JS bundle
    bundleAssetName: "index.android.bundle",
 
    // the entry file for bundle generation
    entryFile: "index.android.js",
 
    // whether to bundle JS and assets in debug mode
    bundleInDebug: false,
    bundleInStaging: true,
    bundleInRelease: true
]
 

def enableSeparateBuildPerCPUArchitecture = false

def enableProguardInReleaseBuilds = false


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
    
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 722

     
    }
    signingConfigs {
        release {


        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    dexOptions
            {
                javaMaxHeapSize "4g"
            }
    buildTypes {
        debug {
    
        }
        
 
    }
    
    
    packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
}
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}



